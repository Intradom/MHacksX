<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Keys
key_left = 'A';
key_right = 'D';
key_jump = 'W';
key_crouch = 'S';
key_sprint = 'J';
key_forward_slash = 'K';
key_up_slash = 'L';

// Player parameters (Make all values positive)
g = 0.90;
fall_speed_max = 30;
run_max = 5;
sprint_max = 11;
jump_speed = 17;
hor_accel_run = 0.8;
hor_accel_sprint = 1;
regular_deccel = 0.45;
slow_deccel = 0.2;
shot_speed = 5;

// Variable initialization
facing_right = 1;
x_vel = 0;
y_vel = 0;
hor_accel = hor_accel_run;
x_accel = 0;
y_accel = g;
braking = 0;
sliding = 0;
can_jump = 1;
wall_touch = 0;
hor_speed_cap = run_max;
can_attack = 1;
unint_anim_id = -1;
image_speed = 0.25;
death = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Get user input
if (unint_anim_id == -1)
{
    if (keyboard_check(ord(key_left)) &amp;&amp; !sliding)
    {
        if (can_jump)
        {
            if (keyboard_check(ord(key_sprint)))
            {
                hor_accel = hor_accel_sprint;
                hor_speed_cap = sprint_max;
                sprite_index = sp_player_sprint;
            }
            else
            {
                hor_accel = hor_accel_run;
                hor_speed_cap = run_max;
                sprite_index = sp_player_run;
            }
            image_xscale = 0.5;
            image_speed = 0.5;
        }
        event_user(0);
    }
    if (keyboard_check(ord(key_right)) &amp;&amp; !sliding)
    {
        if (can_jump)
        {
            if (keyboard_check(ord(key_sprint)))
            {
                hor_accel = hor_accel_sprint;
                hor_speed_cap = sprint_max;
                sprite_index = sp_player_sprint;
            }
            else
            {
                hor_accel = hor_accel_run;
                hor_speed_cap = run_max;
                sprite_index = sp_player_run;
            }
            image_xscale = -0.5;
            image_speed = 0.5;
        }
        event_user(1);
    }
    if (keyboard_check_released(ord(key_left)))
    {
        if (!keyboard_check(ord(key_right)))
        {
            event_user(2);
            sprite_index = sp_player_idle;
            image_xscale = 0.5;
            image_speed = 0.25;
        }
    }
    if (keyboard_check_released(ord(key_right)))
    {
        if (!keyboard_check(ord(key_left)))
        {
            event_user(3);
            sprite_index = sp_player_idle;
            image_xscale = -0.5;
            image_speed = 0.25;
        }
    }
    if (keyboard_check_pressed(ord(key_jump)))
    {
        if (!wall_touch)
        {
            event_user(4);
            sprite_index = sp_player_jump;
            if (facing_right)
                image_xscale = -0.5;
            else
                image_xscale = 0.5;
            image_speed = 1;
            image_index = 0;
            // TODO: Play jump sound here
        }
    }
    if (keyboard_check_pressed(ord(key_crouch)) &amp;&amp; x_vel == 0)
    {
        sprite_index = sp_player_crouch_down;
        if (facing_right)
            image_xscale = -0.5;
        else
            image_xscale = 0.5;
        image_speed = 1;
        image_index = 0;
    }
    else if (keyboard_check_pressed(ord(key_crouch)) &amp;&amp; x_vel != 0)
    {
        sliding = 1;
        sprite_index = sp_player_slide;
        if (facing_right)
            image_xscale = -0.5;
        else
            image_xscale = 0.5;
        image_speed = 1;
        image_index = 0;
        
        if (x_vel &gt; 0)
            x_accel = -slow_deccel;
        else
            x_accel = slow_deccel;
        braking = 1;
        // TODO: Play slide sound here
    }
    if (keyboard_check_released(ord(key_crouch)))
    {
        sliding = 0;
        sprite_index = sp_player_idle;
        if (facing_right)
            image_xscale = -0.5;
        else
            image_xscale = 0.5;
        image_speed = 0.25;
    }
    if (keyboard_check_pressed(ord(key_forward_slash)))
    {
        sprite_index = sp_player_forward_attack;
        if (facing_right)
            image_xscale = -0.5;
        else
            image_xscale = 0.5;
        image_speed = 1.0;
        image_index = 0;
        
        if (facing_right)
        {
            unint_anim_id = instance_create(x + 32, y - 32, obj_forward_attack);
            unint_anim_id.player_id = id;
            unint_anim_id.off_x = 32;
            unint_anim_id.off_y = -32;
        }
        else
        {
            unint_anim_id = instance_create(x - 48, y - 32, obj_forward_attack);
            unint_anim_id.player_id = id;
            unint_anim_id.off_x = -48;
            unint_anim_id.off_y = -32;
        }
        
        // TODO: Play slash sound here
         //audio_play_sound(snd_enemydeath,10,false);
    }
    if (keyboard_check_pressed(ord(key_up_slash)))
    {
        sprite_index = sp_player_up_attack;
        if (facing_right)
            image_xscale = -0.5;
        else
            image_xscale = 0.5;
        image_speed = 1.0;
        image_index = 0;
        
        if (facing_right)
        {
            unint_anim_id = instance_create(x - 48, y - 64, obj_up_attack);
            unint_anim_id.player_id = id;
            unint_anim_id.off_x = -48;
            unint_anim_id.off_y = -64;
        }
        else
        {
            unint_anim_id = instance_create(x - 16, y - 64, obj_up_attack);
            unint_anim_id.player_id = id;
            unint_anim_id.off_x = -16;
            unint_anim_id.off_y = -64;
        }
        
        // TODO: Play same or different slash sound here
         //audio_play_sound(snd_enemydeath,10,false);
    }
}

// Set acceleration conditions
if (place_meeting(x, y + 1, obj_platform) &amp;&amp; can_jump) // Platform below
{
    y_accel = 0;
    y_vel = 0;
}
else
    y_accel = g;   

// Adjust velocities
var x_sign = sign(x_vel);
x_vel += x_accel;
y_vel += y_accel;
if (braking)
{
    if (x_sign != sign(x_vel))
    {
        x_accel = 0;
        x_vel = 0;
        braking = 0;
    }
}
if (x_vel &gt; hor_speed_cap)
    x_vel = hor_speed_cap;
else if (x_vel &lt; -hor_speed_cap)
    x_vel = -hor_speed_cap;
if (y_vel &gt;= fall_speed_max)
    y_vel = fall_speed_max;

// Adjust positions
if (place_meeting(x, y, obj_platform))
    can_jump = 1;
if ((place_meeting(x - (hor_speed_cap + 1) - x_vel, y - (fall_speed_max + 1), obj_platform) || 
        place_meeting(x + (hor_speed_cap + 1) - x_vel, y - (fall_speed_max + 1), obj_platform)))
    wall_touch = 1;
else
    wall_touch = 0;
// Move back if velocity sent too far forward
x += x_vel;
y += y_vel;
while (place_meeting(x, y, obj_platform) &amp;&amp; place_meeting(x + (hor_speed_cap + 1) - x_vel, y - (abs(y_vel) + 1), obj_platform) &amp;&amp;
                                            place_meeting(x + (hor_speed_cap + 1) - x_vel, y + (abs(y_vel) + 1), obj_platform))
{
    x_accel = 0;
    x_vel = 0;
    x--;
}

while (place_meeting(x, y, obj_platform) &amp;&amp; place_meeting(x - (hor_speed_cap + 1) - x_vel, y - (abs(y_vel) + 1), obj_platform) &amp;&amp;
                                            place_meeting(x - (hor_speed_cap + 1) - x_vel, y + (abs(y_vel) + 1), obj_platform))
{
    x_accel = 0;
    x_vel = 0;
    x++;
}
while (place_meeting(x, y, obj_platform) &amp;&amp; place_meeting(x, y + (abs(y_vel) + 1), obj_platform))
    y--;
while (place_meeting(x, y, obj_platform) &amp;&amp; place_meeting(x, y - (abs(y_vel) + 1), obj_platform))
{
    y_vel = 0;
    y++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mon">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!death)
{
    audio_stop_all();
    audio_play_sound(snd_death,10,false);
    unint_anim_id = 1;
    sprite_index = sp_player_death;
    if (facing_right)
        image_xscale = -0.5;
    else
        image_xscale = 0.5;
    image_speed = 0.1;
    image_index = 0;
    death = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir = point_direction(x, y, mouse_x, mouse_y);

//var inst = instance_create(x, y, obj_square);
//inst.direction = dir;
//inst.speed = shot_speed;

//instance_create(mouse_x, mouse_y, obj_rectangle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Jump pressed

y_vel = -jump_speed;
can_jump = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Release right move button

if (x_vel &gt; 0)
    x_accel = -regular_deccel;
else
    x_accel = regular_deccel;
braking = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Release left move button

if (x_vel &gt; 0)
    x_accel = -regular_deccel;
else
    x_accel = regular_deccel;
braking = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Press right move button

x_accel = hor_accel;
braking = 0;
facing_right = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Press left move button

x_accel = -hor_accel;
braking = 0;
facing_right = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == sp_player_jump)
{
    sprite_index = sp_player_idle;
    if (facing_right)
        image_xscale = -0.5;
    else
        image_xscale = 0.5;
    image_speed = 0.25;
}
else if (sprite_index == sp_player_crouch_down)
{
    image_index = 19;
    image_speed = 0;
}
else if (sprite_index == sp_player_slide)
{
    image_index = 19;
    image_speed = 0;
}
else if (sprite_index == sp_player_forward_attack || sprite_index == sp_player_up_attack)
{
    sprite_index = sp_player_idle;
    if (facing_right)
        image_xscale = -0.5;
    else
        image_xscale = 0.5;
    image_speed = 0.25;
    instance_destroy(unint_anim_id);
    //audio_play_sound(snd_enemydeath,10,false);
    unint_anim_id = -1;
    x_vel = 0;
    x_accel = 0;
}
else if (sprite_index == sp_player_death)
{
    audio_stop_sound(snd_game_bg_audio);
    room_goto(rm_end);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>613</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>can_jump</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>50</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>50</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
