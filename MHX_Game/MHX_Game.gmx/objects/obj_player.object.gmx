<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Keys
key_left = 'A';
key_right = 'D';
key_jump = 'W';

// Player parameters (Make all values positive)
g = 0.25;
fall_speed_max = 20;
hor_speed_max = 10;
jump_speed = 5;
hor_accel = 0.5;
regular_deccel = 0.1;
rapid_deccel = 0.2;

// Variable initialization
x_vel = 0;
y_vel = 0;
x_accel = 0;
y_accel = g;
braking = 0;
can_jump = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Get user input
if (keyboard_check(ord(key_left)))
    event_user(0);
if (keyboard_check(ord(key_right)))
    event_user(1);
if (keyboard_check_released(ord(key_left)))
{
    if (!keyboard_check(ord(key_right)))
        event_user(2);
}
if (keyboard_check_released(ord(key_right)))
{
    if (!keyboard_check(ord(key_left)))
        event_user(3);
}
if (keyboard_check_pressed(ord(key_jump)))
    if (can_jump)
        event_user(4);


// Set acceleration conditions
if (place_meeting(x, y + 1, obj_platform) &amp;&amp; can_jump) // Platform below
{
    y_accel = 0;
    y_vel = 0;
}
else
    y_accel = g;   

// Adjust velocities
var x_sign = sign(x_vel);
x_vel += x_accel;
y_vel += y_accel;
if (braking)
{
    if (x_sign != sign(x_vel))
    {
        x_accel = 0;
        x_vel = 0;
        braking = 0;
    }
}
if (x_vel &gt; hor_speed_max)
    x_vel = hor_speed_max;
else if (x_vel &lt; -hor_speed_max)
    x_vel = -hor_speed_max;
if (y_vel &lt; -fall_speed_max)
    y_vel = -fall_speed_max;

// Adjust positions
x += x_vel;
y += y_vel;
// Move back if velocity sent too far forward
while (place_meeting(x, y, obj_platform) &amp;&amp; place_meeting(x + (hor_speed_max + 1), y - (fall_speed_max + 1), obj_platform))
{
    x_accel = 0;
    x_vel = 0;
    x--;
}
while (place_meeting(x, y, obj_platform) &amp;&amp; place_meeting(x - (hor_speed_max + 1), y - (fall_speed_max + 1), obj_platform))
{
    x_accel = 0;
    x_vel = 0;
    x++;
}
while (place_meeting(x, y, obj_platform) &amp;&amp; place_meeting(x, y + (hor_speed_max + 1), obj_platform))
{
    can_jump = 1;
    y--;
}
while (place_meeting(x, y, obj_platform) &amp;&amp; place_meeting(x, y - (hor_speed_max + 1), obj_platform))
    y++;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Jump pressed

y_vel = -jump_speed;
can_jump = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Release right move button

x_accel = -regular_deccel;
braking = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Release left move button

x_accel = regular_deccel;
braking = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Press right move button

x_accel = hor_accel;
braking = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Press left move button

x_accel = -hor_accel;
braking = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
